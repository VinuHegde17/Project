{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Samples\\\\custom\\\\src\\\\components\\\\Examples.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport usePrevious from './UsePrevious'; // Import the custom hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Example() {\n  _s();\n  const [count, setCount] = useState(0);\n  const prevCount = usePrevious(count); // Get the previous value of count\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Current count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Previous count: \", prevCount !== undefined ? prevCount : 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(Example, \"0ZmwtyINDKBZxkHWPCzCzA0/4FI=\", false, function () {\n  return [usePrevious];\n});\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useState","usePrevious","jsxDEV","_jsxDEV","Example","_s","count","setCount","prevCount","children","fileName","_jsxFileName","lineNumber","columnNumber","undefined","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Documents/GitHub/Samples/custom/src/components/Examples.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport usePrevious from './UsePrevious'; // Import the custom hook\r\n\r\nfunction Example() {\r\n  const [count, setCount] = useState(0);\r\n  const prevCount = usePrevious(count); // Get the previous value of count\r\n\r\n  return (\r\n    <div>\r\n      <h1>Current count: {count}</h1>\r\n      <h2>Previous count: {prevCount !== undefined ? prevCount : 'N/A'}</h2>\r\n      <button onClick={() => setCount(count + 1)}>Increment Count</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMQ,SAAS,GAAGP,WAAW,CAACK,KAAK,CAAC,CAAC,CAAC;;EAEtC,oBACEH,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,GAAI,iBAAe,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/BV,OAAA;MAAAM,QAAA,GAAI,kBAAgB,EAACD,SAAS,KAAKM,SAAS,GAAGN,SAAS,GAAG,KAAK;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtEV,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAG,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV;AAACR,EAAA,CAXQD,OAAO;EAAA,QAEIH,WAAW;AAAA;AAAAe,EAAA,GAFtBZ,OAAO;AAahB,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}